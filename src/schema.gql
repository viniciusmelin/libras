# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

enum BankType {
  BRADESCO
  ITAU
  SANTANDER
}

type Contract {
  bankType: BankType!
  createdAt: DateTime!
  description: String!
  endPoint: String
  fields: [Field!]!
  id: ID!
  name: String!
  primaryCallType: PrimaryCallType!
  startPoint: String
  updatedAt: DateTime!
  version: String!
}

input ContractCreateInput {
  bankType: BankType!
  description: String!
  endPoint: String
  fields: [FieldsInputs!]!
  name: String!
  primaryCallType: PrimaryCallType!
  startPoint: String
  version: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Field {
  api: String
  defaultValue: String
  description: String
  fieldType: FieldType!
  mapping: String
  name: String!
  puppeteer: [Step!]
  required: Boolean!
}

enum FieldType {
  BOOL
  DATE
  DECIMAL
  INT
  TEXT
}

input FieldsInputs {
  api: String
  defaultValue: String
  description: String
  fieldType: FieldType!
  mapping: String!
  name: String!
  puppeteer: [StepInputs!]!
  required: Boolean!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  create(input: ContractCreateInput!): Contract!
  sendAnalysis(data: JSON!, id: ID!, version: String!): JSON!
  update(id: ID!, input: ContractCreateInput!): Contract!
}

enum PrimaryCallType {
  API
  PUPPETEER
}

enum PuppeteerComponentType {
  CLICK
  TYPE
  WAIT_FOR
  WAIT_FOR_SELECTOR
}

type Query {
  contracts: [Contract!]
}

type Step {
  component: PuppeteerComponentType!
  query: String!
  sequence: Float!
  wait: Float!
}

input StepInputs {
  component: PuppeteerComponentType!
  query: String!
  sequence: Float!
  wait: Float!
}
